import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score, mean_squared_error
from sklearn.preprocessing import StandardScaler
from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

# Read the CSV file
df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Absenteeism_at_work_Project.csv')

# Clean the "Work load Average/day" column by removing commas and converting to numeric
df["Work load Average/day "] = df["Work load Average/day "].str.replace(',', '').astype(float)

# Replace missing values with the mean of each column
df.fillna(df.mean().round(0), inplace=True)

# Separate features and target variable
x = df.iloc[:, :19].values
y = df["Absenteeism time in hours"].values

# Split the data into training and testing sets
xtrain, xtest, ytrain, ytest = train_test_split(x, y, test_size=0.2, random_state=42)

# Standardize the features (optional, but often recommended for neural networks)
scaler = StandardScaler()
xtrain = scaler.fit_transform(xtrain)
xtest = scaler.transform(xtest)

# Build the Random Forest model
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)

# Train the model
rf_model.fit(xtrain, ytrain)

# Make predictions
ytrain_pred = rf_model.predict(xtrain)
ytest_pred = rf_model.predict(xtest)

# Evaluate the model
train_r2 = r2_score(ytrain, ytrain_pred)
test_r2 = r2_score(ytest, ytest_pred)
mse_train = mean_squared_error(ytrain, ytrain_pred)
mse_test = mean_squared_error(ytest, ytest_pred)

print(f"Train R-squared: {train_r2}")
print(f"Test R-squared: {test_r2}")
print(f"Train Mean Squared Error: {mse_train}")
print(f"Test Mean Squared Error: {mse_test}")
